{"version":3,"sources":["meteor://ðŸ’»app/packages/apollo/main-client.js","meteor://ðŸ’»app/packages/apollo/check-npm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,gBAAP;;AAEA,SAAS,sBAAT,QAAuC,eAAvC;AACA,SAAS,yBAAT,QAA0C,sCAA1C;AACA,SAAS,QAAT,QAAyB,sBAAzB;AACA,SAAS,CAAT,QAAkB,mBAAlB;;AAEA,IAAM,gCAAgC;AACpC,QAAM,UAD8B;AAEpC,WAAS,EAF2B;AAGpC,qBAAmB;AAHiB,CAAtC;;AAMA,OAAO,IAAM,+BAA+B,SAA/B,4BAA+B,CAAC,OAAgB;AAC3D,MAAM,SAAS,EAAE,MAAF,CAAS,6BAAT,EAAwC,WAAxC,CAAf;;;AAGA,MAAI,OAAO,OAAO,IAAlB;AACA,MAAI,KAAK,CAAL,MAAY,GAAhB,EAAqB;AACnB,WAAO,KAAK,KAAL,CAAW,CAAX,CAAP;AACD;;;AAGD,MAAM,MAAM,OAAO,WAAP,CAAmB,IAAnB,CAAZ;AACA,MAAM,mBAAmB,uBAAuB,GAAvB,CAAzB;;AAEA,MAAI,OAAO,iBAAX,EAA8B;AAC5B,qBAAiB,GAAjB,CAAqB,CAAC;AACpB,qBADoB;AAAA,iCACJ,OADI,EACK,IADL,EACW;AAC7B,cAAM,mBAAmB,SAAS,iBAAT,EAAzB;;AAEA,cAAI,CAAC,gBAAL,EAAuB;AACrB;AACA;AACD;;AAED,cAAI,CAAC,QAAQ,OAAR,CAAgB,OAArB,EAA8B;AAC5B,oBAAQ,OAAR,CAAgB,OAAhB,GAA0B,IAAI,OAAJ,EAA1B;AACD;;AAED,kBAAQ,OAAR,CAAgB,OAAhB,CAAwB,aAAxB,GAAwC,gBAAxC;;AAEA;AACD;;AAhBmB;AAAA;AAAA,KAAD,CAArB;AAkBD;;AAED,SAAO,gBAAP;AACD,CAnCM;;AAqCP,OAAO,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,sBAAD,EAA4B;AAC5D,SAAO;AACL,sBAAkB,6BAA6B,sBAA7B,CADb;AAEL,sBAAkB,yBAFb;;;AAKL;AAAkB,gCAAC,MAAD,EAAY;AAC5B,YAAI,OAAO,GAAP,IAAc,OAAO,UAAzB,EAAqC;AACnC,cAAM,SAAS,OAAO,UAAP,GAAoB,OAAO,GAA1C;AACA,iBAAO,MAAP;AACD;AACF;;AALD;AAAA;AALK,GAAP;AAYD,CAbM,4F;;;;;;;;;;;AClDP,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,gBAAT,QAAiC,oCAAjC;;AAEA,IAAI,OAAO,QAAX,EAAqB;AACnB,mBAAiB;AACf,qBAAiB;AADF,GAAjB,EAEG,QAFH;AAGD,CAJD,MAIO;AACL,mBAAiB;AACf,qBAAiB,QADF;AAEf,mBAAe,SAFA;AAGf,eAAW,SAHI;AAIf,eAAW,QAJI;AAKf,qBAAiB;AALF,GAAjB,EAMG,QANH;AAOD,6F","file":"/packages/apollo.js","sourcesContent":["import './check-npm.js';\n\nimport { createNetworkInterface } from 'apollo-client';\nimport { addTypenameToSelectionSet } from 'apollo-client/queries/queryTransform';\nimport { Accounts } from 'meteor/accounts-base';\nimport { _ } from 'meteor/underscore';\n\nconst defaultNetworkInterfaceConfig = {\n  path: '/graphql',\n  options: {},\n  useMeteorAccounts: true\n};\n\nexport const createMeteorNetworkInterface = (givenConfig) => {\n  const config = _.extend(defaultNetworkInterfaceConfig, givenConfig);\n\n  // absoluteUrl adds a '/', so let's remove it first\n  let path = config.path;\n  if (path[0] === '/') {\n    path = path.slice(1);\n  }\n\n  // For SSR\n  const url = Meteor.absoluteUrl(path);\n  const networkInterface = createNetworkInterface(url);\n\n  if (config.useMeteorAccounts) {\n    networkInterface.use([{\n      applyMiddleware(request, next) {\n        const currentUserToken = Accounts._storedLoginToken();\n\n        if (!currentUserToken) {\n          next();\n          return;\n        }\n\n        if (!request.options.headers) {\n          request.options.headers = new Headers();\n        }\n\n        request.options.headers.Authorization = currentUserToken;\n\n        next();\n      },\n    }]);\n  }\n\n  return networkInterface;\n};\n\nexport const meteorClientConfig = (networkInterfaceConfig) => {\n  return {\n    networkInterface: createMeteorNetworkInterface(networkInterfaceConfig),\n    queryTransformer: addTypenameToSelectionSet,\n\n    // Default to using Mongo _id, must use _id for queries.\n    dataIdFromObject: (result) => {\n      if (result._id && result.__typename) {\n        const dataId = result.__typename + result._id;\n        return dataId;\n      }\n    },\n  };\n};\n","import { Meteor } from 'meteor/meteor';\nimport { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\nif (Meteor.isClient) {\n  checkNpmVersions({\n    'apollo-client': '^0.4.11',\n  }, 'apollo');\n} else {\n  checkNpmVersions({\n    'apollo-server': '^0.2.1',\n    \"body-parser\": \"^1.15.2\",\n    \"express\": \"^4.14.0\",\n    \"graphql\": \"^0.6.2\",\n    \"graphql-tools\": \"^0.6.2\",\n  }, 'apollo');\n}\n"]}